import { runWebScraper } from './web_scraper.js';
import { runPriceEvaluator, getHistoricalSummary } from './evaluate_price.js';
import { getNotificationsHistory } from './send_notifications.js';

// Funci√≥n principal que orquesta el flujo completo
async function main() {
    console.log('üöÄ SISTEMA DE MONITOREO DE VUELOS');
    console.log('==================================');
    console.log('üìã Flujo: Web Scraper ‚Üí Evaluador de Precios\n');
    
    try {
        // PASO 1: Ejecutar Web Scraper
        console.log('üîÑ PASO 1: Ejecutando Web Scraper...');
        console.log('=====================================\n');
        
        const scraperResult = await runWebScraper();
        
        if (!scraperResult) {
            console.log('\n‚ùå Web Scraper no devolvi√≥ resultados. Finalizando.');
            return;
        }
        
        if (!scraperResult.success) {
            console.log('\n‚ùå Web Scraper fall√≥. No se ejecutar√° el evaluador de precios.');
            return;
        }
        
        console.log('\n‚úÖ Web Scraper completado exitosamente');
        console.log(`üìä Datos obtenidos: ${scraperResult.flightData.from} ‚Üí ${scraperResult.flightData.to} (${scraperResult.flightData.flight_date})`);
        
        // PASO 2: Ejecutar Evaluador de Precios
        console.log('\nüîÑ PASO 2: Ejecutando Evaluador de Precios...');
        console.log('=============================================\n');
        
        const evaluatorResult = await runPriceEvaluator(scraperResult.flightData.flight_date);
        
        if (evaluatorResult) {
            console.log('\n‚úÖ Evaluador de Precios completado exitosamente');
            
            // PASO 3: Mostrar Resumen Final
            console.log('\nüîÑ PASO 3: Generando Resumen Final...');
            console.log('====================================');
            
            await getHistoricalSummary();
            await getNotificationsHistory(5);
            
            // Resumen de la ejecuci√≥n completa
            console.log('\nüéâ EJECUCI√ìN COMPLETADA EXITOSAMENTE');
            console.log('===================================');
            console.log('üìä ESTAD√çSTICAS FINALES:');
            console.log(`   ‚Ä¢ Web Scraper: ‚úÖ ${scraperResult.job.origin_city} ‚Üí ${scraperResult.job.destination_city}`);
            console.log(`   ‚Ä¢ Rutas analizadas: ${evaluatorResult.routesAnalyzed}`);
            console.log(`   ‚Ä¢ Alertas enviadas: ${evaluatorResult.alertsSent}`);
            
            if (evaluatorResult.alertsSent > 0) {
                console.log('\nüö® ALERTAS ENVIADAS:');
                evaluatorResult.alerts.forEach(alert => {
                    console.log(`   ‚Ä¢ ${alert.route}: ${alert.currency}$${alert.price} (${alert.reason})`);
                });
            } else {
                console.log('\nüìù No se enviaron alertas en esta ejecuci√≥n');
            }
            
        } else {
            console.log('\n‚ùå Evaluador de Precios fall√≥');
        }
        
    } catch (error) {
        console.error('\n‚ùå ERROR CR√çTICO EN FUNCI√ìN PRINCIPAL:', error.message);
        console.error('Stack:', error.stack);
        process.exit(1);
    }
}

// Ejecutar el sistema
main();